// На практике объект global не используется
// Переменные, объявленные внутри модуля,
// являются локальными для модуля
var x = 10;

function test() {
    console.log('Test function, number = ', x);
};

// чтобы переменная была доступна в другом модуле,
// необходимо добавить их в объект   exports
// exports -  объект, который возвращается функцией require 

exports.number = x;
exports.func = test;

// exports = x; // Error
// когда мы  свойство exports добавляем какое-то значение,
// то это значение попадает не совсем в объект exports, а 
// в объект module.exports, т.е. сам модуль описывается 
// объектом module и у него есть св-во exports,
// module.exports хранит объект,
// который будет экспортироваться в модуль,
// в котором происходит подключение текущего модуля, а 
// слово exports используется, как алиас, и само 
// свойство exports хранит ссылку на модуль module.exports
// Таким образом, когда мы выполняем команду
// exports = x; 
// мы просто меняем ссылку, а сам объект module.exports
//остается пустым
// Выражение module.exports = x; передаст для main.js значене
// переменной obj = 10, т.е. мы изменили непосредственно тот объект, 
// который будет возвращаться 
// Доступ к объекту module.exports можно получить не только используя
// алиас  exports, алиас this:  
// this = x;


