/* Алгоритм поиска модулей при вызове функции require('имя модуля')
    1. Если модуль является системным, происходит его загрузка

    2. Если 'имя модуля' начинается со знака '/' - поиск модуля будет
        производится в корне файловой системы

    3. Если 'имя модуля' начинается со знака '/', './', '../' - поиск
        осуществляется несколькими способами:
        3.1 Происходит поиск фйла 'имя модуля' по указанному пути (см. Загрузка файла)
        3.2 Происходит поиск директории, имя которой 'имя модуля', по указанному пути
            (см. Загрузка директории)

    4. Поиск папки node_modules
        4.1 Поиск модуля происходит в директории node_modules
        4.2 Если в текущем каталоге нет каталога node_modules, происходит переход
            в каталог уровнем выше, и производится

    5. Ошибка, модуль не найден
*/

// Загрузка файла

// 1. Если 'имя модуля' или 'имя модуля'.js,  происходит загрузка JavaScript файла
// 2. Если 'имя модуля'.json, происходит парсинг файла и загружается  JavaScript объект
// 3. Если 'имя модуля'.node, происходит загрузка бинарного файла

// Загрузка директории

// 1. Если 'имя модуля' соответствует имени директории и в ней есть файл 
//      package.json, происходит парсинг содержимого и поиск свойства main 
//      (в свойстве находится путь к загружаемым модулям).
//      Если все прошло успешно, со свойства извлекается значениее и происходит
//      загрузка файла (см. Загрузка файла)
//  2. Если предыдущий пункт не выполнен, происходит загрузка файла с именем
//      index (см. Загрузка индекс файла)

//  Загрузка index файла

//  1. Если 'имя модуля'/index или 'имя модуля'/index.js, 
//      происходит загрузка JavaScript файла
//  2. Если 'имя модуля'/index.json, 
//      происходит парсинг файла и загружается  JavaScript объект
//  Загрузка index файла
// 3. Если 'имя модуля'/index.node, происходит загрузка бинарного файла

//require('app');  // Нужно ввести имя подключаемого файла




// Пример к пункту:
// 1. Если модуль является системным, происходит его загрузка
// Подключение в main.js:
//  var http = require('http');  // Нужно ввести имя подключаемого файла
//  console.log(http);
// В итоге выводится длинная тарабарщина


// Пример к пункту:
// 2. Если 'имя модуля' начинается со знака '/' - поиск ...
// При этом на диске у D нас находится этот файл (dbConnection.js):
//  смотри его содержание в D:\Node\008_Parent\dbConnection.js
// Подключение в main.js:
//  var db = require('/dbConnection');  // Нужно ввести имя подключаемого файла
//  console.log(db);
// В итоге выводится:
//  [Function: CreateConnection]

// Пример к пункту:
// 3. Если 'имя модуля' начинается со знака '/', './', '../' - поиск... 3.1 
//  -> Загрузка файла 1.  ... :
//      1. Создадим в папке с запускаемым main.js файл, например, custom.js:
//          console.log('custom module js')
//      2. Подключаем модуль в main.js:
//          require('./custom.js');  // Нужно ввести имя подключаемого файла
//      В итоге после запуска  main.js выводится:
//          custom module js


// Пример к пункту:
// 3. Если 'имя модуля' начинается со знака '/', './', '../' - поиск... 3.1 
//  -> Загрузка файла 2.  ... :
//      1. Создадим в папке с запускаемым main.js файл, например,
//          custom.json вместо custom.js:
//          {
//              "name" : "Ivan",
//              "age" : 25
//          } 
//      2. Подключаем модуль в main.js:
//          var obj = require('./custom.json');  // Нужно ввести имя подключаемого файла
//         console.log(obj);
//          В итоге после запуска  main.js выводится:
//              { "name" : "Ivan",  "age" : 25 } 

// Пример к пункту:
// 3. Если 'имя модуля' начинается со знака '/', './', '../' - поиск... 3.2 
//  -> Загрузка директории 1.  ... :
//      1. Создадим в папке с запускаемым main.js директорию, например,
//          custom, в которой находится файл package.json :
//              {
//                  "main" : "c.js",
//              } 
//          В папке custom создадим также файл c.js:
//              console.log('custom file');
//      2. Подключаем модуль в main.js:
//          require('./custom');  // Нужно ввести имя подключаемого файла
//          В итоге после запуска  main.js выводится:
//              custom file



// Пример к пункту:
// 3. Если 'имя модуля' начинается со знака '/', './', '../' - поиск... 3.2 
//  -> Загрузка директории 2.  ... :
//      1. Создадим в папке с запускаемым main.js директорию, например,
//          custom2, в которой нет файла package.json,
//          среда начинает искать файл с именем index.js:
//              console.log('index js file');
//      2. Подключаем модуль в main.js:
//         require('./custom2');  // Нужно ввести имя подключаемого файла
//          В итоге после запуска  main.js выводится:
//              index js file


// Если же и директория не была найдена, то переходим к п.4 Поиск папки node_modules
// Пример к пункту:
//  4. Поиск папки node_modules
//      4.1 Поиск модуля происходит ...
// Поиск этой папк происходит по тем путям, которые хранятся в свойстве paths объекта module
//      1. Создадим в папке с запускаемым main.js директорию 
//          node_modules, в которой находится  файл custom4.js,
//              console.log('Custom4 module from node_modules');
//      2. Подключаем модуль в main.js:
//         require('custom4');  // Нужно ввести имя подключаемого файла
//          В итоге после запуска  main.js выводится:
//              Custom4 module from node_modules



// Пример к пункту:
//  4. Поиск папки node_modules
//      4.2 Если в текущем каталоге нет каталога node_modules ...
//      1. Перенесем директорию node_modules, в которой находится  файл custom5.js:
//              console.log('Custom4 module from node_modules');
//           из папки с запускаемым main.js в каталог выше (Node)
//      2. Подключаем модуль в main.js:
          require('custom5');  // Нужно ввести имя подключаемого файла
//          В итоге после запуска  main.js выводится:
//              Custom4 module from node_modules
//  В эту папку удобно помещать модули, которые будут установлены из менеджера пакетов



